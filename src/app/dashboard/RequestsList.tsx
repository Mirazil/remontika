'use client'
import { useEffect, useState } from 'react'
import {
  collection, query, where, orderBy, onSnapshot, Timestamp, limit as qLimit
} from 'firebase/firestore'
import { getAuth, onAuthStateChanged } from 'firebase/auth'
import { db }       from '@/lib/firebase'
import RequestCard  from './RequestCard'
import Spinner      from '@/components/Spinner'

export type RequestDoc = {
  id:            string
  device:        string
  brand:         string
  model:         string
  description:   string
  photos:        string[]
  contactMethod: string
  contactValue:  string
  address:       string
  status:        string
  createdAt:     Timestamp | null
}

/**
 * –ï—Å–ª–∏ `limit` –ø–µ—Ä–µ–¥–∞–Ω ‚Üí –±–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ N –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞—è–≤–æ–∫,
 * –∏–Ω–∞—á–µ ‚Äî –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –≤—Å–µ.
 */
export default function RequestsList({ limit }: { limit?: number } = {}) {
  const [docs,    setDocs   ] = useState<RequestDoc[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const stopAuth = onAuthStateChanged(getAuth(), user => {
      if (!user) { setDocs([]); setLoading(false); return }

      /* –±–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å */
      let q = query(
        collection(db, 'requests'),
        where('userId', '==', user.uid),
        orderBy('createdAt', 'desc'),
      )
      /* –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–µ—Ä—Ö—É—à–∫—É */
      if (limit) q = query(q, qLimit(limit))

      const stopSnap = onSnapshot(q, snap => {
        setDocs(
          snap.docs.map(d => ({ id: d.id, ...(d.data() as Omit<RequestDoc,'id'>) }))
        )
        setLoading(false)
      })

      return stopSnap
    })

    return stopAuth
  }, [limit])

  if (loading)     return <Spinner/>
  if (!docs.length)
    return (
      <p className="text-center text-gray-500 pt-20">
        –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –∑–∞—è–≤–æ–∫ üôÇ
      </p>
    )

  return (
    <div className="space-y-4 pb-24">
      {docs.map(r => (
        <RequestCard
          key={r.id}
          {...r}
          /* –¢–µ–ø–µ—Ä—å –Ω–∞–æ–±–æ—Ä–æ—Ç:
             ‚Ä¢ –µ—Å–ª–∏ limit –ø–µ—Ä–µ–¥–∞–Ω (–≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Üí 2 –∑–∞—è–≤–∫–∏) ‚Üí –ø–æ–ª–Ω—ã–π –≤–∏–¥
             ‚Ä¢ –µ—Å–ª–∏ limit –ù–ï –ø–µ—Ä–µ–¥–∞–Ω  (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Äú/dashboard/all‚Äù)   ‚Üí –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π */
          compact={!limit}
          {...r}
        />
      ))}
    </div>
  )
}
